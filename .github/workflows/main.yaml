on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
name: SonarQube Scan
jobs:
  sq_scan_job:
    runs-on: ubuntu-latest
    name: SonarQube check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Extract context
        id: context
        shell: bash
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "pushed" ]]; then
            EVENT_ACTION=$(jq -r ".action" "${GITHUB_EVENT_PATH}")
              if [[ "${EVENT_ACTION}" = "opened" ]]; then
          		CURRENT_BRANCH = $(jq -r ".pullrequest.head.ref" "${GITHUB_EVENT_PATH}")
          		CB = ${GITHUB_EVENT_PATH#pullrequest/head/ref}
                echo "##[set-output name=current_branch;]${CURRENT_BRANCH}"
                echo "##[set-output name=cb;]${CB}"
            fi
          fi

          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            EVENT_ACTION=$(jq -r ".action" "${GITHUB_EVENT_PATH}")
              if [[ "${EVENT_ACTION}" = "opened" ]]; then
          		PR_BRANCH = $(jq -r ".pullrequest.head.ref" "${GITHUB_EVENT_PATH}")
          		PR_KEY = $(jq -r ".pullrequest.number" "${GITHUB_EVENT_PATH}")
                echo "##[set-output name=pr_branch;]${PR_BRANCH}"
                echo "##[set-output name=pr_key;]${PR_KEY}"
            fi
          fi


          echo "##[set-output name=current_branch;]${CURRENT_BRANCH}"
          echo "##[set-output name=parent_branch;]${PARENT_BRANCH}"
      - name: Setup sonarqube
        uses: warchant/setup-sonar-scanner@v1
      - name: Run sonarqube
        shell: bash
        env:
          # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${{ steps.context.outputs.current_branch }}
          echo ${{ steps.context.outputs.cb }}
          echo ${{ steps.context.outputs.pr_branch }}
          echo ${{ steps.context.outputs.pr_key }}
#        sonar-scanner
#          -Dsonar.projectKey=oxc
#          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#          -Dsonar.sources=.
#          -Dsonar.host.url=http://mc-h6yx.localhost.run
#          -Dsonar.scm.provider=git
#          -Dsonar.branch.name=${{ steps.context.outputs.current_branch }}
#          -Dsonar.branch.target=${{ steps.context.outputs.parent_branch }}
#          -Dsonar.pullrequest.branch=${{ steps.context.outputs.current_branch }}
#          -Dsonar.pullrequest.base=${{ steps.context.outputs.parent_branch }}
